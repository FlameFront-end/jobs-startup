version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: job_parser_postgres
    environment:
      POSTGRES_DB: job_parser
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - job_parser_network
    restart: unless-stopped

  # NestJS Application
  app:
    build: .
    container_name: job_parser_app
    environment:
      NODE_ENV: production
      PORT: 3000
      API_PREFIX: api
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: job_parser
      THROTTLE_TTL: 60
      THROTTLE_LIMIT: 100
      LOG_LEVEL: info
      PARSING_INTERVAL: 300000
      CLEANUP_INTERVAL: 86400000
      MAX_JOBS_AGE_DAYS: 30
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - postgres
    networks:
      - job_parser_network
    restart: unless-stopped

  # Redis для кеширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: job_parser_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - job_parser_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  job_parser_network:
    driver: bridge