version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jobs_postgres
    environment:
      POSTGRES_DB: job_parser
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jobs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d job_parser"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AI Service (Python FastAPI)
  ai-service:
    build: ./ai-service
    container_name: jobs_ai_service
    env_file:
      - ./ai-service/.env
    ports:
      - "8001:8001"
    depends_on:
      - ollama
    networks:
      - jobs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama для AI сервиса
  ollama:
    image: ollama/ollama:latest
    container_name: jobs_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - jobs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Parser Service (NestJS)
  parser:
    build: ./parser
    container_name: jobs_parser
    env_file:
      - ./parser/.env
    ports:
      - "3000:3000"
    volumes:
      - ./parser/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      ai-service:
        condition: service_healthy
    networks:
      - jobs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Client (React + Nginx)
  client:
    build: ./client
    container_name: jobs_client
    env_file:
      - ./client/.env
    ports:
      - "80:80"
    depends_on:
      - parser
    networks:
      - jobs_network
    restart: unless-stopped

volumes:
  postgres_data:
  ollama_data:

networks:
  jobs_network:
    driver: bridge
