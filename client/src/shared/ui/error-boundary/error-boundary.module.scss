@use "sass:map";
@use "@/shared/styles/variables.scss" as *;
@use "@/shared/styles/mixins.scss" as *;

.errorBoundaryPage {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	min-height: 100vh;
	background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 50%, #fecaca 100%);
	overflow: hidden auto;

	@include p(md, all);

	@include mobile {
		align-items: flex-start;
		padding-top: map.get($spacing, lg);
	}

	&::before {
		position: absolute;
		background:
			radial-gradient(circle at 20% 80%, rgb(239 68 68 / 10%) 0%, transparent 50%),
			radial-gradient(circle at 80% 20%, rgb(239 68 68 / 10%) 0%, transparent 50%);
		content: "";
		inset: 0;
		pointer-events: none;
	}
}

[data-theme="dark"] .errorBoundaryPage {
	background: linear-gradient(135deg, #1f1f1f 0%, #2d1b1b 50%, #3d1a1a 100%);

	&::before {
		background:
			radial-gradient(circle at 20% 80%, rgb(239 68 68 / 15%) 0%, transparent 50%),
			radial-gradient(circle at 80% 20%, rgb(239 68 68 / 15%) 0%, transparent 50%);
	}
}

.errorContainer {
	position: relative;
	z-index: 1;
	width: 100%;
	max-width: 900px;
	border: 1px solid $border_color;
	border-radius: map.get($border_radius, xl);
	box-sizing: border-box;
	box-shadow:
		0 25px 50px -12px rgb(0 0 0 / 15%),
		0 0 0 1px rgb(255 255 255 / 5%);
	background: $background_card;
	backdrop-filter: blur(10px);
	text-align: center;

	@include p(2xl, all);

	@include mobile {
		max-width: 100%;
		margin: 0;
		border-radius: map.get($border_radius, lg);
	}

	&::before {
		position: absolute;
		border-radius: map.get($border_radius, xl);
		background: linear-gradient(135deg, rgb(255 255 255 / 10%) 0%, rgb(255 255 255 / 5%) 100%);
		content: "";
		inset: 0;
		pointer-events: none;
	}
}

[data-theme="dark"] .errorContainer {
	&::before {
		background: linear-gradient(135deg, rgb(255 255 255 / 5%) 0%, rgb(255 255 255 / 2%) 100%);
	}
}

.errorIcon {
	position: relative;
	z-index: 2;
	margin-top: 0;

	@include text-responsive(3.5rem, 4rem, 5rem);

	animation: shake 0.6s ease-in-out;
	filter: drop-shadow(0 4px 8px rgb(239 68 68 / 30%));

	@include m(lg, all);
}

.errorTitle {
	@include font-display;

	position: relative;
	z-index: 2;
	margin-top: 0;
	color: $error_color;
	text-shadow: 0 2px 4px rgb(239 68 68 / 20%);

	@include m(md, all);
}

.errorDescription {
	@include font-body-large;

	position: relative;
	z-index: 2;
	max-width: 600px;
	margin-top: 0;
	margin-right: auto;
	margin-left: auto;
	color: $text_light;

	@include m(2xl, all);
}

.errorDetails {
	position: relative;
	z-index: 2;
	margin-top: 0;
	border: 1px solid $border_color;
	border-radius: map.get($border_radius, lg);
	box-sizing: border-box;
	box-shadow: inset 0 1px 0 rgb(255 255 255 / 10%);
	background: $background_light;
	overflow: hidden;
	backdrop-filter: blur(5px);
	text-align: left;

	@include p(xl, all);
	@include m(2xl, all);
}

.errorMessage {
	@include font-body-small;

	margin-top: 0;
	border-left: 4px solid $error_color;
	border-radius: map.get($border_radius, md);
	box-sizing: border-box;
	box-shadow: 0 2px 4px rgb(0 0 0 / 10%);
	background: $background_color;
	font-family: Monaco, Menlo, "Ubuntu Mono", monospace;
	word-break: break-all;
	overflow-wrap: break-all;

	@include p(lg, all);
	@include m(lg, all);
}

.errorStack {
	@include m(md, all);

	margin-bottom: 0;

	details {
		summary {
			@include font-label;

			border: 1px solid $border_color;
			border-radius: map.get($border_radius, md);
			background: $background_color;
			color: $text_color;
			transition: all 0.2s ease;
			cursor: pointer;

			@include p(sm, all);

			&:hover {
				background: $background_light;
			}
		}

		pre {
			@include font-caption;

			max-height: 400px;
			border: 1px solid $border_color;
			border-radius: map.get($border_radius, md);
			box-sizing: border-box;
			box-shadow: inset 0 2px 4px rgb(0 0 0 / 10%);
			background: $background_color;
			overflow: auto;
			font-family: Monaco, Menlo, "Ubuntu Mono", monospace;
			white-space: pre-wrap;
			overflow-wrap: break-all;

			@include p(lg, all);

			@include mobile {
				max-height: 300px;
			}
		}
	}
}

.btnOpenEditor {
	@include font-button;

	margin-bottom: 0;
	border: none;
	border-radius: map.get($border_radius, lg);
	box-sizing: border-box;
	box-shadow: 0 4px 12px rgb(237 137 54 / 30%);
	background: $accent_color;
	color: white;
	transition: all 0.3s ease;
	cursor: pointer;

	@include p(sm, y);
	@include p(md, x);
	@include m(lg, all);

	&:disabled {
		transform: none;
		box-shadow: 0 2px 4px rgb(237 137 54 / 20%);
		opacity: 0.5;
		cursor: not-allowed;
	}

	&:hover:not(:disabled) {
		transform: translateY(-2px);
		box-shadow: 0 6px 20px rgb(237 137 54 / 40%);
		background: color-mix(in srgb, $accent_color 90%, black);
	}

	@include mobile {
		width: 100%;
	}
}

.errorActions {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	gap: map.get($spacing, md);

	@include mobile {
		flex-direction: column;
		gap: map.get($spacing, sm);
		width: 100%;
	}
}

.btnPrimary,
.btnSecondary {
	@include font-button;
	@include p(md, y);
	@include p(lg, x);

	position: relative;
	z-index: 2;
	display: inline-block;
	min-width: 180px;
	border: 2px solid transparent;
	border-radius: map.get($border_radius, lg);
	box-sizing: border-box;
	text-decoration: none;
	transition: all 0.3s ease;
	cursor: pointer;

	@include mobile {
		width: 100%;
		min-width: auto;
		max-width: 100%;
	}
}

.btnPrimary {
	box-shadow: 0 4px 12px rgb(229 62 62 / 30%);
	background: $error_color;
	color: white;

	&:hover {
		transform: translateY(-3px);
		box-shadow: 0 8px 25px rgb(229 62 62 / 40%);
		background: color-mix(in srgb, $error_color 90%, black);
	}

	@include mobile {
		width: 100%;
	}
}

.btnSecondary {
	border-color: $border_color;
	box-shadow: 0 2px 4px rgb(0 0 0 / 10%);
	background: transparent;
	color: $text_color;

	&:hover {
		transform: translateY(-3px);
		border-color: $error_color;
		box-shadow: 0 6px 20px rgb(0 0 0 / 15%);
		background: $background_light;
	}

	@include mobile {
		width: 100%;
	}
}

@keyframes shake {
	0%,
	100% {
		transform: translateX(0);
	}

	25% {
		transform: translateX(-5px);
	}

	75% {
		transform: translateX(5px);
	}
}
