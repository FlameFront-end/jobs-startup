@use "sass:map";
@use "@/shared/styles/variables.scss" as *;
@use "@/shared/styles/mixins.scss" as *;

.notFoundPage {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	min-height: 100vh;
	background: linear-gradient(135deg, $background_light 0%, $background_color 50%, $background_light 100%);
	overflow: hidden;

	@include p(md, all);

	@include mobile {
		align-items: flex-start;
		padding-top: map.get($spacing, lg);
	}

	&::before {
		position: absolute;
		background:
			radial-gradient(circle at 30% 70%, rgb(49 130 206 / 10%) 0%, transparent 50%),
			radial-gradient(circle at 70% 30%, rgb(49 130 206 / 10%) 0%, transparent 50%);
		content: "";
		inset: 0;
		pointer-events: none;
	}
}

[data-theme="dark"] .notFoundPage {
	&::before {
		background:
			radial-gradient(circle at 30% 70%, rgb(96 165 250 / 15%) 0%, transparent 50%),
			radial-gradient(circle at 70% 30%, rgb(96 165 250 / 15%) 0%, transparent 50%);
	}
}

.notFoundContainer {
	position: relative;
	z-index: 2;
	width: 100%;
	max-width: 700px;
	box-sizing: border-box;
	text-align: center;

	@include mobile {
		max-width: 100%;
		margin: 0;
	}
}

.errorCode {
	@include font-display;

	margin-top: 0;
	color: $primary_color;

	@include text-responsive(5rem, 8rem, 10rem);

	line-height: 1;
	text-shadow: 0 6px 12px rgb(49 130 206 / 30%);
	animation: pulse 2s ease-in-out infinite;
	filter: drop-shadow(0 4px 8px rgb(49 130 206 / 20%));

	@include m(lg, all);
}

.errorTitle {
	@include font-heading-1;

	margin-top: 0;
	color: $text_color;
	text-shadow: 0 2px 4px rgb(0 0 0 / 10%);

	@include m(md, all);
}

.errorDescription {
	@include font-body-large;

	max-width: 500px;
	margin-top: 0;
	margin-right: auto;
	margin-left: auto;
	color: $text_light;

	@include m(2xl, all);
}

.errorActions {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	gap: map.get($spacing, md);

	@include mobile {
		flex-direction: column;
		gap: map.get($spacing, sm);
		width: 100%;
	}
}

.btnPrimary,
.btnSecondary {
	@include font-button;
	@include p(md, y);
	@include p(lg, x);

	display: inline-block;
	min-width: 180px;
	border: 2px solid transparent;
	border-radius: map.get($border_radius, lg);
	box-sizing: border-box;
	box-shadow: 0 4px 12px rgb(0 0 0 / 10%);
	text-decoration: none;
	transition: all 0.3s ease;
	cursor: pointer;

	@include mobile {
		width: 100%;
		min-width: auto;
		max-width: 100%;
	}
}

.btnPrimary {
	box-shadow: 0 4px 12px rgb(49 130 206 / 30%);
	background: $primary_color;
	color: white;

	&:hover {
		transform: translateY(-3px);
		box-shadow: 0 8px 25px rgb(49 130 206 / 40%);
		background: color-mix(in srgb, $primary_color 90%, black);
	}
}

.btnSecondary {
	border-color: $border_color;
	box-shadow: 0 2px 4px rgb(0 0 0 / 10%);
	background: transparent;
	color: $text_color;

	&:hover {
		transform: translateY(-3px);
		border-color: $primary_color;
		box-shadow: 0 6px 20px rgb(0 0 0 / 15%);
		background: $background_light;
	}
}

@keyframes pulse {
	0%,
	100% {
		transform: scale(1);
		opacity: 1;
	}

	50% {
		transform: scale(1.05);
		opacity: 0.8;
	}
}
