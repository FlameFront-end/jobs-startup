@use 'sass:map';
@use '@/shared/styles/variables.scss' as *;
@use '@/shared/styles/mixins.scss' as *;

.errorBoundaryPage {
	min-height: 100vh;
	display: flex;
	align-items: center;
	justify-content: center;
	background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 50%, #fecaca 100%);

	@include padding-md;

	position: relative;
	overflow-y: auto;
	overflow-x: hidden;

	@include mobile {
		align-items: flex-start;
		padding-top: map.get($spacing, lg);
	}

	&::before {
		content: '';
		position: absolute;
		inset: 0;
		background:
			radial-gradient(circle at 20% 80%, rgb(239 68 68 / 10%) 0%, transparent 50%),
			radial-gradient(circle at 80% 20%, rgb(239 68 68 / 10%) 0%, transparent 50%);
		pointer-events: none;
	}
}

[data-theme='dark'] .errorBoundaryPage {
	background: linear-gradient(135deg, #1f1f1f 0%, #2d1b1b 50%, #3d1a1a 100%);

	&::before {
		background:
			radial-gradient(circle at 20% 80%, rgb(239 68 68 / 15%) 0%, transparent 50%),
			radial-gradient(circle at 80% 20%, rgb(239 68 68 / 15%) 0%, transparent 50%);
	}
}

.errorContainer {
	text-align: center;
	max-width: 900px;
	width: 100%;
	background: $background-card;
	border-radius: map.get($border-radius, xl);

	@include padding-2xl;

	box-shadow:
		0 25px 50px -12px rgb(0 0 0 / 15%),
		0 0 0 1px rgb(255 255 255 / 5%);
	border: 1px solid $border-color;
	position: relative;
	backdrop-filter: blur(10px);
	z-index: 1;
	box-sizing: border-box;

	@include mobile {
		max-width: 100%;
		margin: 0;
		border-radius: map.get($border-radius, lg);
	}

	&::before {
		content: '';
		position: absolute;
		inset: 0;
		background: linear-gradient(135deg, rgb(255 255 255 / 10%) 0%, rgb(255 255 255 / 5%) 100%);
		border-radius: map.get($border-radius, xl);
		pointer-events: none;
	}
}

[data-theme='dark'] .errorContainer {
	&::before {
		background: linear-gradient(135deg, rgb(255 255 255 / 5%) 0%, rgb(255 255 255 / 2%) 100%);
	}
}

.errorIcon {
	font-size: 5rem;

	@include margin-lg;

	margin-top: 0;
	animation: shake 0.6s ease-in-out;
	filter: drop-shadow(0 4px 8px rgb(239 68 68 / 30%));
	position: relative;
	z-index: 2;

	@include tablet-down {
		font-size: 4rem;
	}

	@include mobile {
		font-size: 3.5rem;
	}
}

.errorTitle {
	@include font-display;

	color: $error-color;

	@include margin-md;

	margin-top: 0;
	text-shadow: 0 2px 4px rgb(239 68 68 / 20%);
	position: relative;
	z-index: 2;
}

.errorDescription {
	@include font-body-large;

	color: $text-light;

	@include margin-2xl;

	margin-top: 0;
	max-width: 600px;
	margin-left: auto;
	margin-right: auto;
	position: relative;
	z-index: 2;
}

.errorDetails {
	background: $background-light;
	border-radius: map.get($border-radius, lg);

	@include padding-xl;
	@include margin-2xl;

	margin-top: 0;
	text-align: left;
	border: 1px solid $border-color;
	position: relative;
	z-index: 2;
	backdrop-filter: blur(5px);
	box-shadow: inset 0 1px 0 rgb(255 255 255 / 10%);
	box-sizing: border-box;
	overflow: hidden;
}

.errorMessage {
	@include font-body-small;

	font-family: Monaco, Menlo, 'Ubuntu Mono', monospace;
	background: $background-color;

	@include padding-lg;
	@include margin-lg;

	margin-top: 0;
	border-radius: map.get($border-radius, md);
	border-left: 4px solid $error-color;
	word-break: break-word;
	box-shadow: 0 2px 4px rgb(0 0 0 / 10%);
	box-sizing: border-box;
	overflow-wrap: break-word;
}

.errorStack {
	@include margin-md;

	margin-bottom: 0;

	details {
		summary {
			@include font-label;

			cursor: pointer;
			color: $text-color;

			@include padding-sm;

			background: $background-color;
			border-radius: map.get($border-radius, md);
			border: 1px solid $border-color;
			transition: all 0.2s ease;

			&:hover {
				background: $background-light;
			}
		}

		pre {
			@include font-caption;

			font-family: Monaco, Menlo, 'Ubuntu Mono', monospace;
			background: $background-color;

			@include padding-lg;

			
			border-radius: map.get($border-radius, md);
			overflow: auto;
			border: 1px solid $border-color;
			max-height: 400px;
			box-shadow: inset 0 2px 4px rgb(0 0 0 / 10%);
			white-space: pre-wrap;
			overflow-wrap: break-word;
			box-sizing: border-box;
			scrollbar-width: thin;
			scrollbar-color: $primary-color transparent;

			&::-webkit-scrollbar {
				width: 8px;
				height: 8px;
			}

			&::-webkit-scrollbar-track {
				background: transparent;
				border-radius: 4px;
			}

			&::-webkit-scrollbar-thumb {
				background: linear-gradient(
					135deg,
					$primary-color 0%,
					color-mix(in srgb, $primary-color 80%, $accent-color) 100%
				);
				border-radius: 4px;
				transition: all 0.3s ease;
			}

			&::-webkit-scrollbar-thumb:hover {
				background: linear-gradient(
					135deg,
					color-mix(in srgb, $primary-color 90%, black) 0%,
					color-mix(in srgb, $accent-color 90%, black) 100%
				);
			}

			&::-webkit-scrollbar-corner {
				background: transparent;
			}

			@include mobile {
				max-height: 300px;
			}
		}
	}

	[data-theme='dark'] & {
		pre {
			scrollbar-color: $primary-color transparent;

			&::-webkit-scrollbar-thumb {
				background: linear-gradient(
					135deg,
					$primary-color 0%,
					color-mix(in srgb, $primary-color 80%, $accent-color) 100%
				);
			}

			&::-webkit-scrollbar-thumb:hover {
				background: linear-gradient(
					135deg,
					color-mix(in srgb, $primary-color 90%, white) 0%,
					color-mix(in srgb, $accent-color 90%, white) 100%
				);
			}
		}
	}
}

.btnOpenEditor {
	@include font-button;

	background: $accent-color;
	color: white;
	border: none;

	@include padding-responsive(
		map.get($spacing, sm) map.get($spacing, md),
		map.get($spacing, md) map.get($spacing, lg),
		map.get($spacing, md) map.get($spacing, lg)
	);

	border-radius: map.get($border-radius, lg);
	cursor: pointer;
	transition: all 0.3s ease;

	@include margin-lg;

	margin-bottom: 0;
	box-shadow: 0 4px 12px rgb(237 137 54 / 30%);
	box-sizing: border-box;

	&:hover:not(:disabled) {
		background: color-mix(in srgb, $accent-color 90%, black);
		transform: translateY(-2px);
		box-shadow: 0 6px 20px rgb(237 137 54 / 40%);
	}

	&:disabled {
		opacity: 0.5;
		cursor: not-allowed;
		transform: none;
		box-shadow: 0 2px 4px rgb(237 137 54 / 20%);
	}

	@include mobile {
		width: 100%;
	}
}

.errorActions {
	display: flex;
	gap: map.get($spacing, md);
	justify-content: center;
	flex-wrap: wrap;

	@include mobile {
		flex-direction: column;
		width: 100%;
		gap: map.get($spacing, sm);
	}
}

.btnPrimary,
.btnSecondary {
	@include font-button;
	@include padding-responsive(
		map.get($spacing, md) map.get($spacing, lg),
		map.get($spacing, lg) map.get($spacing, 2xl),
		map.get($spacing, lg) map.get($spacing, 2xl)
	);

	border-radius: map.get($border-radius, lg);
	text-decoration: none;
	display: inline-block;
	transition: all 0.3s ease;
	cursor: pointer;
	border: 2px solid transparent;
	min-width: 180px;
	position: relative;
	z-index: 2;
	box-sizing: border-box;

	@include mobile {
		width: 100%;
		max-width: 100%;
		min-width: auto;
	}
}

.btnPrimary {
	background: $error-color;
	color: white;
	box-shadow: 0 4px 12px rgb(229 62 62 / 30%);

	&:hover {
		background: color-mix(in srgb, $error-color 90%, black);
		transform: translateY(-3px);
		box-shadow: 0 8px 25px rgb(229 62 62 / 40%);
	}

	@include mobile {
		width: 100%;
	}
}

.btnSecondary {
	background: transparent;
	color: $text-color;
	border-color: $border-color;
	box-shadow: 0 2px 4px rgb(0 0 0 / 10%);

	&:hover {
		background: $background-light;
		border-color: $error-color;
		transform: translateY(-3px);
		box-shadow: 0 6px 20px rgb(0 0 0 / 15%);
	}

	@include mobile {
		width: 100%;
	}
}

@keyframes shake {
	0%,
	100% {
		transform: translateX(0);
	}

	25% {
		transform: translateX(-5px);
	}

	75% {
		transform: translateX(5px);
	}
}
